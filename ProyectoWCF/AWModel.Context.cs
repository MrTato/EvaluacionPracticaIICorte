//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProyectoWCF
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class AdventureWorks2019Entities : DbContext
    {
        public AdventureWorks2019Entities()
            : base("name=AdventureWorks2019Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual ObjectResult<SELECT_HumanResources_Department_Result> SELECT_HumanResources_Department_Result()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SELECT_HumanResources_Department_Result>("SELECT_HumanResources_Department_Result");
        }
    
        public virtual ObjectResult<SELECT_Production_ProductCategory_Result> SELECT_Production_ProductCategory_Result()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SELECT_Production_ProductCategory_Result>("SELECT_Production_ProductCategory_Result");
        }
    
        public virtual ObjectResult<SELECT_Production_UnitMeasure_Result> SELECT_Production_UnitMeasure_Result()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SELECT_Production_UnitMeasure_Result>("SELECT_Production_UnitMeasure_Result");
        }
    
        public virtual int DELETE_HumanResources_Department_Result(Nullable<short> departamentoID)
        {

            var departamentoIDParameter = departamentoID.HasValue ?
            new ObjectParameter("DepartamentoID", departamentoID) :
            new ObjectParameter("DepartamentoID", typeof(short));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DELETE_HumanResources_Department_Result", departamentoIDParameter);

        }
    
        public virtual int DELETE_Production_ProductCategory_Result(Nullable<int> productCategoryID)
        {
            var productCategoryIDParameter = productCategoryID.HasValue ?
                new ObjectParameter("ProductCategoryID", productCategoryID) :
                new ObjectParameter("ProductCategoryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DELETE_Production_ProductCategory_Result", productCategoryIDParameter);
        }
    
        public virtual int DELETE_Production_UnitMeasure_Result(string unitMeasureCode)
        {
            var unitMeasureCodeParameter = unitMeasureCode != null ?
                new ObjectParameter("UnitMeasureCode", unitMeasureCode) :
                new ObjectParameter("UnitMeasureCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DELETE_Production_UnitMeasure_Result", unitMeasureCodeParameter);
        }
    
        public virtual int INSERT_HumanResources_Department_Result(string name, string groupName, Nullable<System.DateTime> modifiedDate)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var groupNameParameter = groupName != null ?
                new ObjectParameter("GroupName", groupName) :
                new ObjectParameter("GroupName", typeof(string));
    
            var modifiedDateParameter = modifiedDate.HasValue ?
                new ObjectParameter("ModifiedDate", modifiedDate) :
                new ObjectParameter("ModifiedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERT_HumanResources_Department_Result", nameParameter, groupNameParameter, modifiedDateParameter);
        }
    
        public virtual int INSERT_Production_ProductCategory_Result(string name, Nullable<System.DateTime> modifiedDate)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var modifiedDateParameter = modifiedDate.HasValue ?
                new ObjectParameter("ModifiedDate", modifiedDate) :
                new ObjectParameter("ModifiedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERT_Production_ProductCategory_Result", nameParameter, modifiedDateParameter);
        }
    
        public virtual int INSERT_Production_UnitMeasure_Result(string unitMeasureCode, string name, Nullable<System.DateTime> modifiedDate)
        {
            var unitMeasureCodeParameter = unitMeasureCode != null ?
                new ObjectParameter("UnitMeasureCode", unitMeasureCode) :
                new ObjectParameter("UnitMeasureCode", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var modifiedDateParameter = modifiedDate.HasValue ?
                new ObjectParameter("ModifiedDate", modifiedDate) :
                new ObjectParameter("ModifiedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERT_Production_UnitMeasure_Result", unitMeasureCodeParameter, nameParameter, modifiedDateParameter);
        }
    
        public virtual int UPDATE_HumanResources_Department_Result(Nullable<short> departmentID, string name, string groupName, Nullable<System.DateTime> modifiedDate)
        {
            var departmentIDParameter = departmentID.HasValue ?
                new ObjectParameter("DepartmentID", departmentID) :
                new ObjectParameter("DepartmentID", typeof(short));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var groupNameParameter = groupName != null ?
                new ObjectParameter("GroupName", groupName) :
                new ObjectParameter("GroupName", typeof(string));
    
            var modifiedDateParameter = modifiedDate.HasValue ?
                new ObjectParameter("ModifiedDate", modifiedDate) :
                new ObjectParameter("ModifiedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UPDATE_HumanResources_Department_Result", departmentIDParameter, nameParameter, groupNameParameter, modifiedDateParameter);
        }
    
        public virtual int UPDATE_Production_ProductCategory_Result(Nullable<int> productCategoryID, string name, Nullable<System.DateTime> modifiedDate)
        {
            var productCategoryIDParameter = productCategoryID.HasValue ?
                new ObjectParameter("ProductCategoryID", productCategoryID) :
                new ObjectParameter("ProductCategoryID", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var modifiedDateParameter = modifiedDate.HasValue ?
                new ObjectParameter("ModifiedDate", modifiedDate) :
                new ObjectParameter("ModifiedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UPDATE_Production_ProductCategory_Result", productCategoryIDParameter, nameParameter, modifiedDateParameter);
        }
    
        public virtual int UPDATE_Production_UnitMeasure_Result(string unitMeasureCode, string name, Nullable<System.DateTime> modifiedDate)
        {
            var unitMeasureCodeParameter = unitMeasureCode != null ?
                new ObjectParameter("UnitMeasureCode", unitMeasureCode) :
                new ObjectParameter("UnitMeasureCode", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var modifiedDateParameter = modifiedDate.HasValue ?
                new ObjectParameter("ModifiedDate", modifiedDate) :
                new ObjectParameter("ModifiedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UPDATE_Production_UnitMeasure_Result", unitMeasureCodeParameter, nameParameter, modifiedDateParameter);
        }
    }
}
